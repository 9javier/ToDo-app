[{"C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\index.js":"1","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\App.js":"2","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\components\\HomeComponent\\home.js":"4","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\components\\HeaderComponent\\header.js":"5","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\components\\TaskComponent\\task.js":"6","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\services\\to-do-services.js":"7","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\components\\HomeComponent\\ModalTask\\modal.task.js":"8","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\components\\HomeComponent\\ModalTask\\modal.create.js":"9"},{"size":1094,"mtime":1608219725394,"results":"10","hashOfConfig":"11"},{"size":278,"mtime":1608141451507,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1608141451536,"results":"13","hashOfConfig":"11"},{"size":4146,"mtime":1608187840407,"results":"14","hashOfConfig":"11"},{"size":1951,"mtime":1608222448249,"results":"15","hashOfConfig":"11"},{"size":3577,"mtime":1608187357680,"results":"16","hashOfConfig":"11"},{"size":947,"mtime":1608179522825,"results":"17","hashOfConfig":"11"},{"size":1960,"mtime":1608183299121,"results":"18","hashOfConfig":"11"},{"size":1869,"mtime":1608186093457,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15yupg6",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},"C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\index.js",[],"C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\App.js",["44"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Fragment } from 'react';\r\nimport Home from './components/HomeComponent/home';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment className=\"App\">      \r\n          <Home/>\r\n   </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;",["45","46"],"C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\components\\HomeComponent\\home.js",["47","48","49","50","51","52","53","54"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport HeaderComponent from '../HeaderComponent/header';\r\nimport TaskComponent from '../TaskComponent/task';\r\nimport './home.style.css';\r\nimport TODO_SERVICES from '../../services/to-do-services';\r\nimport  ModalTaskComponent  from './ModalTask/modal.task';\r\nimport  ModalTaskCreate  from './ModalTask/modal.create';\r\nexport default class Home extends React.Component {\r\n\r\n    constructor(todoServices ){\r\n        super();\r\n        this.todoServices = new TODO_SERVICES();\r\n    }\r\n\r\n    state = {\r\n        taskList: [],\r\n        showModal: false,\r\n        editModal: false,\r\n        createModal: false,\r\n        txtTask: \"\",\r\n        txtSearch: \"\",\r\n        editTakId: 0\r\n    }\r\n    componentWillMount() {\r\n        this.getAllTask();\r\n    }\r\n\r\n    async getAllTask() {\r\n        let tasks = await this.todoServices.getAllTodos();\r\n        if(tasks){\r\n            this.setState({taskList: tasks.response})\r\n        }\r\n    }\r\n\r\n    handleTaskInput = (event) => {\r\n        this.setState({ txtTask: event.target.value })\r\n    }\r\n\r\n    handleTask =  (e) => {\r\n        if (e.event == 'delete') {// delete event\r\n            this.deleteTodoById(e.taskId)\r\n        } else if (e.event == 'update') { //update event\r\n            this.setState({ editModal: true, editTakId: e.taskId});\r\n        }\r\n    }\r\n \r\n    deleteTodoById = async (id) => {\r\n        setTimeout(async ()=>{\r\n            let result = await this.todoServices.deleteTodoById(id);\r\n            if(result) this.getAllTask();\r\n         }, 600);            \r\n    }\r\n\r\n    inputSearch = (event) => {\r\n        this.setState({ txtSearch: event.target.value })\r\n    }\r\n\r\n     handleModalEdit = async (e)=>{\r\n        if(e.modalEdit == true){\r\n            this.setState({editModal: false});\r\n            setTimeout(async ()=>{\r\n                const tasks = await this.todoServices.getAllTodos();\r\n                this.setState({taskList: tasks.response})\r\n             }, 600);            \r\n        }\r\n    }\r\n\r\n    handleCreateModal = (e)=>{\r\n        if(e.modalCreate == true){\r\n            setTimeout(async ()=>{\r\n            this.setState({createModal: false})\r\n            this.getAllTask();\r\n             }, 600);  \r\n        }\r\n    }\r\n\r\n    render() {\r\n        let filterTask = this.state.taskList.filter(\r\n            (task) => {\r\n                return task.title.toLowerCase().indexOf(\r\n                    this.state.txtSearch) !== -1\r\n            }\r\n        );\r\nreturn (\r\n    <Fragment>\r\n        {/**Header from app */}\r\n        <HeaderComponent />\r\n        {/* Input Search Task */}\r\n        <div class=\"d-flex justify-content-center\">\r\n            <div className=\"task-content\">\r\n                <div class=\"md-form mt-0\" id=\"input-search\">\r\n                    <input id=\"txtsearch\" class=\"form-control\" type=\"text\" onChange={this.inputSearch}\r\n                        placeholder=\"Tarea\" aria-label=\"Search\" maxLength=\"30\" />\r\n                </div>\r\n                {/* Filter from Input*/\r\n                    filterTask.map((task, index) => {\r\n                        return (\r\n                            <div onClick={this.handleTask}>\r\n                                <TaskComponent key={index} title={task.title} state={task.completed} id={task.id} />\r\n                            </div>);\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n        <div class=\"d-flex justify-content-center mt-5\">\r\n            <button type=\"button\" class=\"btn btn-primary align-self-end \"onClick={()=>this.setState({createModal: true})}>\r\n                Crear Tarea <i class=\"fas fa-sticky-note\"></i>\r\n            </button>\r\n        </div>\r\n\r\n        {  /**   Modal Create Task */\r\n        this.state.createModal == true ?\r\n            <div onClick={this.handleCreateModal}>\r\n                <ModalTaskCreate />\r\n            </div> : ''}\r\n\r\n        {  /**   Modal Edit Task */ \r\n         this.state.editModal == true ?\r\n            <div onClick={this.handleModalEdit}>\r\n                <ModalTaskComponent idTask={this.state.editTakId} />\r\n            </div> : ''}\r\n    </Fragment>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\components\\HeaderComponent\\header.js",["55","56","57","58","59","60","61","62","63"],"C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\components\\TaskComponent\\task.js",["64","65","66"],"import React from 'react';\r\nimport './task.style.css';\r\nimport axios from 'axios';\r\nimport { Popover } from 'react-bootstrap'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\n\r\nclass TaskComponent extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n \r\n    state = {\r\n        stateTask: false,\r\n        target: null,\r\n        show: false,\r\n        ref: null,\r\n        taskId: this.props.id,\r\n    }\r\n\r\n    componentWillMount () {\r\n        this.setState({stateTask: parseInt(this.props.state) == 1 ? true : false});\r\n              \r\n    }\r\n\r\n    handleStateTask =(event)=>{\r\n        const value = event.target.checked;\r\n        this.setState({stateTask: value})\r\n        this.updateStateTask(this.props.id, value);\r\n    }\r\n\r\n    updateStateTask(id,state){\r\n        const body={ completed: state};\r\n        axios.patch(`${process.env.REACT_APP_API_BASE_URL}/todos/${id}`,body)\r\n        .then( res =>{\r\n            if(res){\r\n            }\r\n        });\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        this.setState({show:!this.state.show,\r\n            target: event.target\r\n        \r\n        })\r\n      };\r\n\r\n      modalDissmis = () =>{\r\n          this.setState({show: false})\r\n      }\r\n\r\n    render(){\r\n        const handleTask = (e) => {\r\n            closeModal();\r\n            e.taskId = this.state.taskId;\r\n            e.event = 'delete';\r\n        }\r\n\r\n        const editTaskEvent = (e) => {\r\n            closeModal();\r\n            e.event = 'update';\r\n            e.taskId = this.state.taskId;\r\n        }\r\n\r\n        const closeModal = () => {\r\n            this.setState({ show: false })\r\n        }\r\n\r\n return(\r\n     /** Card Task */\r\n     <div className=\"content-card-task\">\r\n         <div class=\"card\">\r\n             <div class=\"card-body\">\r\n                 <div class=\"form-check\" id=\"form-task\">\r\n                     <input type=\"checkbox\" class=\"form-check-input\" id=\"check-task\" checked={this.state.stateTask}\r\n                         value={this.state.stateTask}\r\n                         onChange={this.handleStateTask} />\r\n                     <label class=\"form-check-label\" id=\"txtTitleTask\"\r\n                         className={this.state.stateTask == true ? 'lblTaskEnd' : ''}>{this.props.title}</label>\r\n                          {/* Settings for each task*/}\r\n                     <div id=\"card-settings\">\r\n                         <div ref={this.state.ref}>\r\n                             <i class=\"fas fa-ellipsis-v\" placement=\"right\" id=\"icon-setting-task\" onClick={this.handleClick}></i>\r\n                             <Overlay disabled show={this.state.show} target={this.state.target} placement=\"bottom\" containerPadding={20}>\r\n                                 <Popover id=\"popover-contained\">\r\n                                    <Popover.Title as=\"h3\" id=\"title-action\" onClick={this.modalDissmis}>Acción</Popover.Title>\r\n                                     <Popover.Content>\r\n                                         <button type=\"button\" class=\"btn btn-light\" onClick={editTaskEvent}><i class=\"fas fa-edit\"></i></button><br></br>\r\n                                         <button type=\"button\" class=\"btn btn-light\" onClick={handleTask}><i class=\"fas fa-trash-alt\"></i></button>\r\n                                     </Popover.Content>\r\n                                 </Popover>\r\n                             </Overlay>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n         </div>\r\n     </div>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default TaskComponent;","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\services\\to-do-services.js",[],"C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\components\\HomeComponent\\ModalTask\\modal.task.js",["67","68"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport TODO_SERVICES from '../../../services/to-do-services';\r\n\r\n  class ModalTaskComponent extends React.Component{\r\n\r\n    constructor(props,todoServices ){\r\n      super(props);\r\n      this.todoServices = new TODO_SERVICES();\r\n  }\r\n\r\n\r\n    state = {\r\n      modalState: true,\r\n      txtTask: ''\r\n    }\r\n\r\n    componentWillMount() {\r\n      this.getTask(this.props.idTask);\r\n   }\r\n\r\n   async getTask(id){\r\n    const todo = await this.todoServices.getTaskById(id);\r\n    this.setState({txtTask: todo.response.title})\r\n   }\r\n\r\n    async editTask (){\r\n      const textNewTask = this.state.txtTask;\r\n      let body = {id:this.props.idTask,title:  textNewTask, name: textNewTask};\r\n      await this.todoServices.updateTask(body);\r\n  }\r\n\r\n  inputTask = (event) =>{\r\n      this.setState({ txtTask: event.target.value });\r\n  }\r\n    \r\n    render(){\r\n\r\n    const handleModalEdit = (e)=>{\r\n      this.editTask();\r\n        e.modalEdit = true;\r\n        this.setState({modalState: false})\r\n    }\r\n\r\n\r\n      return(\r\n        <Fragment>\r\n  <Modal show={this.state.modalState} onHide={this.state.modalState}\r\n       size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n       <Modal.Header>\r\n         Editar Tarea\r\n               </Modal.Header>\r\n       <Modal.Body>\r\n         <div class=\"md-form active-purple-2 mb-3\" id=\"active-purple-2\">\r\n           <input id=\"title-task\" class=\"form-control\" type=\"text\" onChange={this.inputTask}\r\n             placeholder=\"Editar Tarea\" aria-label=\"Search\" value={this.state.txtTask}/>\r\n         </div>        \r\n         </Modal.Body>\r\n       <Modal.Footer>\r\n         <Button onClick={handleModalEdit}>Cancelar</Button>\r\n         <Button onClick={handleModalEdit}>Guardar</Button>\r\n       </Modal.Footer>\r\n     </Modal>\r\n   </Fragment>  \r\n      )\r\n    }\r\n    \r\n\r\n  }\r\n  \r\n    \r\nexport default ModalTaskComponent;","C:\\Users\\FUT54\\Desktop\\study\\ToDo-app\\todo-frontend\\src\\components\\HomeComponent\\ModalTask\\modal.create.js",["69","70","71","72"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport TODO_SERVICES from '../../../services/to-do-services';\r\n\r\n  class ModalTaskCreate extends React.Component{\r\n\r\n    constructor(props,todoServices ){\r\n      super(props);\r\n      this.todoServices = new TODO_SERVICES();\r\n  }\r\n\r\n    state = {\r\n      modalState: true,\r\n      txtTask: ''\r\n    }\r\n\r\n      async createTask() {\r\n\r\n          if (this.state.txtTask != \"\" && this.state.txtTask.length > 0) {\r\n              const taskName = this.state.txtTask;\r\n              const todo = { name: taskName, title: taskName, completed: false }\r\n              let response = await this.todoServices.createTodo(todo);\r\n\r\n          }\r\n      }\r\n\r\n  inputTask = (event) =>{\r\n      this.setState({ txtTask: event.target.value });\r\n  }\r\n    \r\n    render(){\r\n\r\n    const handleModalCreate = (e)=>{\r\n        this.createTask();\r\n        e.modalCreate = true;\r\n        this.setState({modalState: false})\r\n    }\r\n\r\n\r\n      return(\r\n        <Fragment>\r\n    <Modal show={this.state.modalState} onHide={this.state.modalState}\r\n       size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n       <Modal.Header>\r\n         Crear Tarea\r\n       </Modal.Header>\r\n       <Modal.Body>\r\n         <div class=\"md-form active-purple-2 mb-3\" id=\"active-purple-2\">\r\n           <input id=\"title-task\" class=\"form-control\" type=\"text\" onChange={this.inputTask}\r\n             placeholder=\"Editar Tarea\" aria-label=\"Search\" value={this.state.txtTask}/>\r\n         </div>        \r\n         </Modal.Body>\r\n       <Modal.Footer>\r\n         <Button onClick={handleModalCreate}>Cancelar</Button>\r\n         <Button onClick={handleModalCreate}>Guardar</Button>\r\n       </Modal.Footer>\r\n    </Modal>\r\n   </Fragment>  \r\n      )\r\n    }\r\n    \r\n\r\n  }\r\n  \r\n    \r\nexport default ModalTaskCreate;",{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":12},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"73","severity":1,"message":"81","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"82","line":1,"column":38,"nodeType":"75","messageId":"76","endLine":1,"endColumn":46},{"ruleId":"83","severity":1,"message":"84","line":40,"column":21,"nodeType":"85","messageId":"86","endLine":40,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":42,"column":28,"nodeType":"85","messageId":"86","endLine":42,"endColumn":30},{"ruleId":"83","severity":1,"message":"84","line":59,"column":24,"nodeType":"85","messageId":"86","endLine":59,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":69,"column":26,"nodeType":"85","messageId":"86","endLine":69,"endColumn":28},{"ruleId":"83","severity":1,"message":"84","line":112,"column":32,"nodeType":"85","messageId":"86","endLine":112,"endColumn":34},{"ruleId":"83","severity":1,"message":"84","line":118,"column":31,"nodeType":"85","messageId":"86","endLine":118,"endColumn":33},{"ruleId":"73","severity":1,"message":"87","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":18},{"ruleId":"73","severity":1,"message":"88","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":14},{"ruleId":"73","severity":1,"message":"89","line":8,"column":12,"nodeType":"75","messageId":"76","endLine":8,"endColumn":16},{"ruleId":"73","severity":1,"message":"90","line":8,"column":18,"nodeType":"75","messageId":"76","endLine":8,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":41,"column":13,"nodeType":"93","endLine":41,"endColumn":37},{"ruleId":"91","severity":1,"message":"92","line":43,"column":48,"nodeType":"93","endLine":43,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":44,"column":17,"nodeType":"93","endLine":44,"endColumn":58},{"ruleId":"91","severity":1,"message":"92","line":45,"column":17,"nodeType":"93","endLine":45,"endColumn":58},{"ruleId":"91","severity":1,"message":"92","line":46,"column":17,"nodeType":"93","endLine":46,"endColumn":57},{"ruleId":"94","severity":1,"message":"95","line":8,"column":5,"nodeType":"96","messageId":"97","endLine":10,"endColumn":6},{"ruleId":"83","severity":1,"message":"84","line":21,"column":62,"nodeType":"85","messageId":"86","endLine":21,"endColumn":64},{"ruleId":"83","severity":1,"message":"84","line":78,"column":58,"nodeType":"85","messageId":"86","endLine":78,"endColumn":60},{"ruleId":"73","severity":1,"message":"81","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"82","line":1,"column":38,"nodeType":"75","messageId":"76","endLine":1,"endColumn":46},{"ruleId":"73","severity":1,"message":"81","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"82","line":1,"column":38,"nodeType":"75","messageId":"76","endLine":1,"endColumn":46},{"ruleId":"83","severity":1,"message":"98","line":19,"column":34,"nodeType":"85","messageId":"86","endLine":19,"endColumn":36},{"ruleId":"73","severity":1,"message":"99","line":22,"column":19,"nodeType":"75","messageId":"76","endLine":22,"endColumn":27},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Dropdown' is defined but never used.","'styled' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Expected '!==' and instead saw '!='.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]